<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnTutup.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGOfPtRkwAAACBjSFJNAACH
        DwAAjA8AAP1SAACBQAAAfXkAAOmLAAA85QAAGcxzPIV3AAAKOWlDQ1BQaG90b3Nob3AgSUNDIHByb2Zp
        bGUAAEjHnZZ3VFTXFofPvXd6oc0wAlKG3rvAANJ7k15FYZgZYCgDDjM0sSGiAhFFRJoiSFDEgNFQJFZE
        sRAUVLAHJAgoMRhFVCxvRtaLrqy89/Ly++Osb+2z97n77L3PWhcAkqcvl5cGSwGQyhPwgzyc6RGRUXTs
        AIABHmCAKQBMVka6X7B7CBDJy82FniFyAl8EAfB6WLwCcNPQM4BOB/+fpFnpfIHomAARm7M5GSwRF4g4
        JUuQLrbPipgalyxmGCVmvihBEcuJOWGRDT77LLKjmNmpPLaIxTmns1PZYu4V8bZMIUfEiK+ICzO5nCwR
        3xKxRoowlSviN+LYVA4zAwAUSWwXcFiJIjYRMYkfEuQi4uUA4EgJX3HcVyzgZAvEl3JJS8/hcxMSBXQd
        li7d1NqaQffkZKVwBALDACYrmcln013SUtOZvBwAFu/8WTLi2tJFRbY0tba0NDQzMv2qUP91829K3NtF
        ehn4uWcQrf+L7a/80hoAYMyJarPziy2uCoDOLQDI3fti0zgAgKSobx3Xv7oPTTwviQJBuo2xcVZWlhGX
        wzISF/QP/U+Hv6GvvmckPu6P8tBdOfFMYYqALq4bKy0lTcinZ6QzWRy64Z+H+B8H/nUeBkGceA6fwxNF
        hImmjMtLELWbx+YKuGk8Opf3n5r4D8P+pMW5FonS+BFQY4yA1HUqQH7tBygKESDR+8Vd/6NvvvgwIH55
        4SqTi3P/7zf9Z8Gl4iWDm/A5ziUohM4S8jMX98TPEqABAUgCKpAHykAd6ABDYAasgC1wBG7AG/iDEBAJ
        VgMWSASpgA+yQB7YBApBMdgJ9oBqUAcaQTNoBcdBJzgFzoNL4Bq4AW6D+2AUTIBnYBa8BgsQBGEhMkSB
        5CEVSBPSh8wgBmQPuUG+UBAUCcVCCRAPEkJ50GaoGCqDqqF6qBn6HjoJnYeuQIPQXWgMmoZ+h97BCEyC
        qbASrAUbwwzYCfaBQ+BVcAK8Bs6FC+AdcCXcAB+FO+Dz8DX4NjwKP4PnEIAQERqiihgiDMQF8UeikHiE
        j6xHipAKpAFpRbqRPuQmMorMIG9RGBQFRUcZomxRnqhQFAu1BrUeVYKqRh1GdaB6UTdRY6hZ1Ec0Ga2I
        1kfboL3QEegEdBa6EF2BbkK3oy+ib6Mn0K8xGAwNo42xwnhiIjFJmLWYEsw+TBvmHGYQM46Zw2Kx8lh9
        rB3WH8vECrCF2CrsUexZ7BB2AvsGR8Sp4Mxw7rgoHA+Xj6vAHcGdwQ3hJnELeCm8Jt4G749n43PwpfhG
        fDf+On4Cv0CQJmgT7AghhCTCJkIloZVwkfCA8JJIJKoRrYmBRC5xI7GSeIx4mThGfEuSIemRXEjRJCFp
        B+kQ6RzpLuklmUzWIjuSo8gC8g5yM/kC+RH5jQRFwkjCS4ItsUGiRqJDYkjiuSReUlPSSXK1ZK5kheQJ
        yeuSM1J4KS0pFymm1HqpGqmTUiNSc9IUaVNpf+lU6RLpI9JXpKdksDJaMm4ybJkCmYMyF2TGKQhFneJC
        YVE2UxopFykTVAxVm+pFTaIWU7+jDlBnZWVkl8mGyWbL1sielh2lITQtmhcthVZKO04bpr1borTEaQln
        yfYlrUuGlszLLZVzlOPIFcm1yd2WeydPl3eTT5bfJd8p/1ABpaCnEKiQpbBf4aLCzFLqUtulrKVFS48v
        vacIK+opBimuVTyo2K84p6Ss5KGUrlSldEFpRpmm7KicpFyufEZ5WoWiYq/CVSlXOavylC5Ld6Kn0Cvp
        vfRZVUVVT1Whar3qgOqCmrZaqFq+WpvaQ3WCOkM9Xr1cvUd9VkNFw08jT6NF454mXpOhmai5V7NPc15L
        Wytca6tWp9aUtpy2l3audov2Ax2yjoPOGp0GnVu6GF2GbrLuPt0berCehV6iXo3edX1Y31Kfq79Pf9AA
        bWBtwDNoMBgxJBk6GWYathiOGdGMfI3yjTqNnhtrGEcZ7zLuM/5oYmGSYtJoct9UxtTbNN+02/R3Mz0z
        llmN2S1zsrm7+QbzLvMXy/SXcZbtX3bHgmLhZ7HVosfig6WVJd+y1XLaSsMq1qrWaoRBZQQwShiXrdHW
        ztYbrE9Zv7WxtBHYHLf5zdbQNtn2iO3Ucu3lnOWNy8ft1OyYdvV2o/Z0+1j7A/ajDqoOTIcGh8eO6o5s
        xybHSSddpySno07PnU2c+c7tzvMuNi7rXM65Iq4erkWuA24ybqFu1W6P3NXcE9xb3Gc9LDzWepzzRHv6
        eO7yHPFS8mJ5NXvNelt5r/Pu9SH5BPtU+zz21fPl+3b7wX7efrv9HqzQXMFb0ekP/L38d/s/DNAOWBPw
        YyAmMCCwJvBJkGlQXlBfMCU4JvhI8OsQ55DSkPuhOqHC0J4wybDosOaw+XDX8LLw0QjjiHUR1yIVIrmR
        XVHYqLCopqi5lW4r96yciLaILoweXqW9KnvVldUKq1NWn46RjGHGnIhFx4bHHol9z/RnNjDn4rziauNm
        WS6svaxnbEd2OXuaY8cp40zG28WXxU8l2CXsTphOdEisSJzhunCruS+SPJPqkuaT/ZMPJX9KCU9pS8Wl
        xqae5Mnwknm9acpp2WmD6frphemja2zW7Fkzy/fhN2VAGasyugRU0c9Uv1BHuEU4lmmfWZP5Jiss60S2
        dDYvuz9HL2d7zmSue+63a1FrWWt78lTzNuWNrXNaV78eWh+3vmeD+oaCDRMbPTYe3kTYlLzpp3yT/LL8
        V5vDN3cXKBVsLBjf4rGlpVCikF84stV2a9021DbutoHt5turtn8sYhddLTYprih+X8IqufqN6TeV33za
        Eb9joNSydP9OzE7ezuFdDrsOl0mX5ZaN7/bb3VFOLy8qf7UnZs+VimUVdXsJe4V7Ryt9K7uqNKp2Vr2v
        Tqy+XeNc01arWLu9dn4fe9/Qfsf9rXVKdcV17w5wD9yp96jvaNBqqDiIOZh58EljWGPft4xvm5sUmoqb
        PhziHRo9HHS4t9mqufmI4pHSFrhF2DJ9NProje9cv+tqNWytb6O1FR8Dx4THnn4f+/3wcZ/jPScYJ1p/
        0Pyhtp3SXtQBdeR0zHYmdo52RXYNnvQ+2dNt293+o9GPh06pnqo5LXu69AzhTMGZT2dzz86dSz83cz7h
        /HhPTM/9CxEXbvUG9g5c9Ll4+ZL7pQt9Tn1nL9tdPnXF5srJq4yrndcsr3X0W/S3/2TxU/uA5UDHdavr
        XTesb3QPLh88M+QwdP6m681Lt7xuXbu94vbgcOjwnZHokdE77DtTd1PuvriXeW/h/sYH6AdFD6UeVjxS
        fNTws+7PbaOWo6fHXMf6Hwc/vj/OGn/2S8Yv7ycKnpCfVEyqTDZPmU2dmnafvvF05dOJZ+nPFmYKf5X+
        tfa5zvMffnP8rX82YnbiBf/Fp99LXsq/PPRq2aueuYC5R69TXy/MF72Rf3P4LeNt37vwd5MLWe+x7ys/
        6H7o/ujz8cGn1E+f/gUDmPP8usTo0wAAAAlwSFlzAAALDAAACwwBP0AiyAAACk5JREFUWEedVgdU1dcZ
        v23apJU0radp9jajtqkIKntPUdkONAokEJMQNQ4M1gUKYT7mYyOi4opGRJzgwogsKSg07sF+gjwfvMde
        v37fX/FA6kmbvHN+59537zd+37j3/kWKq4sYAzdXEWttLeLt7UWSo6NImD5dxNnaSv+TnZ2fjrWymiyf
        MWNR2uzZgUmzZiUkOznJ09zdg+On238SZWKil2Bvr5Xq5ia2eHiIZBdnkThzpuD/qe7ugvYE6UnzEYx1
        zmRGE3BykhxHGhm9SKS+2Lt0yanz6emqG+cK0XL9Otqbm9GhUKD15k3cKipCcVZW5/6VKy8kOTn5E8k3
        afzlBB5FrkXRrzscGKi4W1aGXrUa/+vX392NhsuXUBAZqZI7OMiI+PMj0f6sDESZmk7b5uVVdfX0aXSp
        VOgh593t7dLY19WFgd5eDPT1YZAw0NMjrfVqNA9lOjqkkbOyx8/vVpyNjX2q2/9bAldXQbV0O+Dvr2m8
        dElKs6qxER337qGzrQ3dj8j0dXZKTiXQfIQgy7As67Cu4soVHAsOHiQSfvF2dk/oAWqUFIarMzWZk4i2
        sHDPCQgYqL1YjpYbN9BC9VXevfuQBNVb09qKLqVSIsJRSqB514MH0Ny//9i5srZW0mUb9VVVOBocDGrg
        paMbkOciyclRAjuPsbKcuuuzz7r+ffw46isr0Xj5MhQ//IBGajjFnTt4UF+P9qYmqClCJsIOJdBc3dLy
        MFskw7KSDkXPNpjA1VOn8J2/P6gnHFPoVKRQphmCulXI6ajE2dhq0UJN0ZYtuEZ1v1NcjFpqvPrqaty+
        dQu3b9+GgqAk4+xESjGRkUBzXuNMsXOWZZ36mhrUlZdLtq6fPYuSHTuQ+dFHijg725eTnJ0pcCchnXGq
        D6d+3aEN61GWnY1rBQW4TozvXLyI+ro61JHxOhrrabxHhu9TdG00KpkQoY3Aa7zHMizLOqzLNtjWtZMn
        Ub57N46FhID8ZcTZ2ggiIjjt3HR/yfCY10ZHB+VEoCY3F7eItYJq3syg1I6A1xRUVwVlpoXKw+C5tPYj
        WdblNbZVc+gQKojAKZkM2729+2SmphMp65QBuvWizcyX7Fu2DPnffIOybdtQSYKVxLiVmk1JuE91/jG4
        vg1UogZKcTPNnyTDumyjijJQuWcPyqkE+aGhyFm9GjGWllExVlaCb7mnE+ztzuZ+vRrHNm5ESVoaKohE
        eVYW/pWfDxWd6Q46+yrq9Hbq+NFoomPK+PE6y0o6pMs22FbF9u0oSU/H8aAgHFqzBsmzZt2QmZk9I6KM
        jLTT3VzVuStX4ghtfB8bi5KUFFRQM5YRmcoTJ6Ch262LoKGLppPO/OORnGgIY9ZIRpIlsG4ZOa3IzJRs
        no+Px5G1a5G7ahW2eswbojJoEwFjz6x585CzZAkOLV+OM9Qk56OjUULCFaRUKpej8tgx9PT3o4/QQ7de
        L92CvSPjqDnvSTIE1ilNTJRslCQkSDbPUPrzKFD2lb1wIaKMjT2FzNg4aIeHBw4sXoxcPz/kUxYK6dI4
        HxaGEmqYCiLCY9Xhw+gfGsIgYWBg4IngPZZh2RJyOKJ7PjwchRRYAUdPPr4jX7uIAPnexCVIyJ4zB/u9
        vXHQ1xdHid1pJrF+PYo2bUIJNeZFOh08Vh3IkRwPDw8/EbxXlZNDsqGoIJ1Sirho82YUbtiA0//8J44u
        XSr5YF87KegYU9MEJiDPdnHB/gULkOPpiTwfH+QTiTNUp3MBASjeGIiLIcG4QOW5Rp08+BMEeO8anaAi
        OlGsUxwYiHMUDNsqIOd55Pygl5fka6e7O2JMjOUiUl8/ZPvMmdhPWcghVnmUmuNE4gwpnCOnpxYtwv6/
        T0TxyhXSyzf0EyXgvUHqiaKvluHb999DwYL5KPzqK5whQifIeR7Zypk/H/vIV7ajI2SGhiEiXFfHJ9XY
        GAdmz0YuNeMRInCUhHKtrbHzjTeQJgTOkqE+ct4/OPiwAR+B1xij11imv68fZ0gnhXR3vPIKDpib48gj
        27ncb0RgC62F6er6iLApU/Qi3nqzK/PDf2Cnvj62ffAB0p97DqmknE743ssTPZTabnLEx62Lnl8eu6nj
        NT29Eng+Zo9kWYd1OQAmkqqlha0T3sUOPT1snTwZkW+8jnBd3WmUAd1xER+8XxpJQtGEhEeOt9J4ngxo
        yLianI6+bNR01lWUhfLlSyXwnNfGyJAO67KNzEc22baMEMF45+268Cm640SEjo6ImDJlTcL48ZDTRsav
        BLLYuc/HaKfLREm3H1+zbfShwaOS3v1WTScurVuDyy+Nl1BFc17jvTGyfHOSje/JFgeUTraZRPyzWojU
        0UmJmDRJCNnkySJSV/f1xL9NVG956ilsJ4E9hJMLF6CZDLaQU+kBItyjd7/pgQrVQRtwY+LbqNPXlsDz
        6qD10h7LjMizLttgW7vJ5jYiwCSS3n1viHxOlWlrCxGtq/MQenrRu19/TXKe+5TAYRoLF8xDbbMCDfQa
        NtCbX0sfHTUhQagz0Ma96ea4N9PqIezNiMgk2guUZFiWdWqJ9NkFc5FHtg6SzV007nrxBcTpTfsuhjIf
        qzNZiNhpUyXI9PT+nGFoUH/k+fE4QiwL//A7lIz7DUp9vXGzvgG3iEhN2GY0WxtCOXcWlIvc8MBrDpTe
        s6Fc6AblnJlosjJATehmSfZmQwNKfbxw4fe/xtlnn8Fhspn3nBay9PXU0XrT3kuYOkUwhFxf/zFiDA3t
        D5gaDxe9MB7FfxqH6rdexrV3XkHV6hWojgylaC2h8p6Ddj9PqJf7QuP/OTSrPpPm7V8sgspzNhQO5qiO
        oFvTfzmuvvUSLr/5Ei6QrcI/auGQoQFiDQ0/SdTTEyMQSYaGYxBnYvzlSQc7/DBxAq5OeA21VOMmC320
        ONui/dP5UK9cjM71y9EVHIDusLUSujZ/jc51y9DBRHw80OJkg0azabirNwlXJryK6ndeQ6GdNRLMzEKT
        DA1EipHhY4xxnkxk4gwM6APFbNk5jznDTTOs0Ww6Fa0udlCRYTVF27XJHz2yIPQmhqMvVSahVx6GnqiN
        6ApcBfWKT6H6eC5amYSRDhqtTVA8zx2JVpahqSbGIp2QNgr/RSCeGMabmIhYMzOXwws/alCs8EPn53Qf
        fOklRd4THYS+9Gj0Z6dgYO8WCf07ktGXJiNigehcuwzqzxdCw5lYshgF3p6qeAsLn0RTE5FhZjLGORN5
        IgG5qalIsjAX0SYmr6Y7zkorC1jVo0qIwFBGLIa3yTG8NwPDuTsxdGwfho7uw/DBbAzvTsNwZhyGUqLQ
        EReGyrWrh7e7u39LL95fUy0tRbKZqUj/uQSS6IM1ztxMRBgZfZju4hJ+wn/F1SvJ8cOtB/eiuzAffaXn
        JHQXnkBb7re4nibHqQD/2xmurvJ4K2v9VHtbkWxtJVLJzi8mICf2cRYWIpE+oWMtLX8bb2OjnegwY1Gq
        s/OmPb4+8Xt8fRMy584NSXRw+IQ+NKfSN+a4GCKd5jBdZMyYLpLpw/OnCPwHVWwsXf4NjFcAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>